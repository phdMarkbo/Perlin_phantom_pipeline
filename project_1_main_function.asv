addpath("/home/user/code/Perlin_phantom_pipeline/function_files")
addpath("/home/user/code/Perlin_phantom_pipeline/load_files/")
addpath("/home/user/code/Perlin_phantom_pipeline/Progressdisp.m/")
phantom_struct = load("PerlinPhantom01.mat");
elems = load("element.dat");
nodes_orig = load("node.dat");
nodes_comp = readtable("cupA_01_all_materials_compressed_nodes.txt");
nodes_comp = table2array(nodes_comp);

finalVolume = phantom_struct.finalVolume;
clear phantom_struct;

finalVolume = replaceValues(finalVolume, [8, 7; 9, 8; 11, 9; 12, 10; 13,11]); % From openVCT format so that averages are correct. 
nodes_orig = nodes_orig(:, 2:4) * 0.001;
nodes_comp = nodes_comp(1:29479, 2:4);
elems = elems(:, 2:5);

test = nodes_orig * 10000 + 1;
tet_ind_to_be_plotted = 1;
%%
%%%SCRIPT1

mapping_struct = tetra_to_voxel_mapping(finalVolume, elems, test,tet_ind_to_be_plotted);

%%
%SCRIPT2

[affine_coords, inside_vals] = pointsInsideTetrahedraByIndices(nodes_orig, nodes_comp, elems, 10000, false, finalVolume);

%%
%SCRIPT3

compressed_phantom1 = phantom_from_transformed_points(affine_coords, inside_vals);
compressed_phantom1 = replaceValues(compressed_phantom1, [11, 13; 10, 12; 9, 11; 8,9 ; 7, 8]); %Back to openVCT format
